{"version":3,"sources":["BenchmarkNotebook.ipynb","logo.svg","JupViewer.js","App.js","serviceWorker.js","index.js"],"names":["ReactMarkdown","require","JupViewer","Card","Meta","state","fpath","fbase_path","ed_theme","text_ed_theme","background_theme","background_text_theme","background_input_theme","background_output_theme","loading","notebook_json","placeholder_component","gutterVisible","str","RegExp","test","a","this","props","file","fbase","split","pop","setState","join","fetch","then","r","text","JSON","parse","console","log","error","alert","source","cell_content","code","rgx","new_source","old_source","match","validURL","replace","rgx2","s2","outputs","length","text_plain","stdout","errors","img_data","stdout_found","text_found","error_found","img_found","lines_stdout","lines_text_plain","lines_error_trace","outs","style","padding","display","color","readOnly","placeholder","mode","theme","name","maxWidth","margin","width","maxLines","fontSize","showPrintMargin","showGutter","highlightActiveLine","value","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","src","backgroundColor","ev","spinning","class","bodyStyle","border","span","Title","strong","wordWrap","title","level","subtitle","alt","coverImg","float","defaultChecked","checkedChildren","unCheckedChildren","onChange","themeChanger","bind","gutterChanger","map","item","Text","textAlign","borderStyle","borderWidth","onLoad","praseSource","parseMD","escapeHtml","praseOutputs","React","Component","App","className","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.957abcb0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/BenchmarkNotebook.5771d6ce.ipynb\";","export default __webpack_public_path__ + \"static/media/logo.927f1d60.svg\";","import React from 'react';\nimport {\n    Card, Spin,\n    Tag, Col, Row, Typography,\n    Switch\n} from 'antd';\nimport { render } from \"react-dom\";\nimport AceEditor from \"react-ace\";\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\nimport \"ace-builds/src-noconflict/theme-kuroir\";\nimport \"ace-builds/src-noconflict/theme-terminal\";\nimport './App.css';\n\nconst ReactMarkdown = require('react-markdown')\nconst { Meta } = Card;\n\nclass JupViewer extends React.Component {\n    state = {\n        //file_path\n        fpath: \"\",\n        fbase_path: \"\",\n        // Editor Theme\n        ed_theme: 'darkTheme',\n        text_ed_theme: 'monokai',\n        //themes:\n        background_theme: \"black\",\n        background_text_theme: 'white',\n        // background_input_theme: '#2F3129',\n        background_input_theme: '#272822',\n        background_output_theme: '#2F3129',\n        loading: true,\n        notebook_json: null,\n        placeholder_component: \"Loading....\",\n\n        // Gutter\n        gutterVisible: false\n    }\n\n    validURL(str) {\n        var pattern = new RegExp('^(https?:\\\\/\\\\/)?' + // protocol\n            '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n            '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n            '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n            '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n            '(\\\\#[-a-z\\\\d_]*)?$', 'i'); // fragment locator\n        return !!pattern.test(str);\n    }\n\n    async componentDidMount() {\n        if (!!this.props.file) {\n            var fbase = this.props.file.split('/');\n            fbase.pop();\n            this.setState({\n                fpath: this.props.file,\n                fbase_path: fbase.join('/') + '/'\n            })\n            await fetch(this.props.file)\n                .then((r) => r.text())\n                .then(async (text) => {\n                    try {\n                        var notebook_json = JSON.parse(text)\n                        this.setState({\n                            notebook_json: notebook_json,\n                            loading: false,\n                            placeholder_component: 'Notebook loaded'\n                        })\n                        console.log(this.state.notebook_json)\n                    } catch (error) {\n                        alert('OOps! Unable to load json')\n                        this.setState({\n                            notebook_json: { \"message\": \"Unable to parse .ipynb file\" },\n                            loading: false,\n                            placeholder_component: 'Oops! We have problem opening the notebook'\n                        })\n                    }\n                })\n        }\n    }\n\n    praseSource(source) {\n        var cell_content = ``\n        for (var code in source) {\n            cell_content += source[code]\n        }\n        return cell_content\n    }\n\n    parseMD(source) {\n        var cell_content = ``\n        for (var code in source) {\n            var rgx = new RegExp(/src=\"(.*?)\"/)\n            var new_source = source[code]\n            var old_source = source[code].match(rgx)\n            if (!!old_source && !this.validURL(old_source[1])) {\n                new_source = source[code].replace(/src=\"(.*?)\"/, 'src=\"' + this.state.fbase_path + old_source[1] + '\"')\n                // console.log(new_source)\n            } else {\n                var rgx2 = new RegExp(/\\!\\[(.*?)\\]\\((.*?)[\\s|\\)]/)\n                var s2 = source[code].match(rgx2)\n                if (!!s2 && !this.validURL(s2[2])) {\n                    // console.log(s2[2])\n                    // console.log(this.validURL(s2[2]))\n                    // console.log(new_source.replace(s2[2], this.state.fbase_path + s2[2]))\n                    new_source = new_source.replace(s2[2], this.state.fbase_path + s2[2])\n                }\n            }\n            // \n            cell_content += new_source\n        }\n        return cell_content\n    }\n\n    praseOutputs(outputs) {\n        if (outputs.length == 0) {\n            return \"\"\n        }\n        // Handle \"data\" type cells\n        var text_plain = ``\n        var stdout = ``\n        var errors = ``\n        var img_data = `data:image/png;base64,`\n\n        //booleans\n        var stdout_found = false\n        var text_found = false\n        var error_found = false\n        var img_found = false\n\n        //maxlines for each output type\n        var lines_stdout = 3\n        var lines_text_plain = 3\n        var lines_error_trace = 3\n        for (var outs in outputs) {\n            if (\"data\" in outputs[outs]) {\n\n                if (\"text/plain\" in outputs[outs][\"data\"]) {\n                    for (var text in outputs[outs]['data']['text/plain']) {\n                        text_plain += outputs[outs]['data']['text/plain'][text]\n                    }\n                    text_found = true\n                    lines_text_plain = outputs[outs][\"data\"][\"text/plain\"].length\n                }\n                if (\"image/png\" in outputs[outs][\"data\"]) {\n                    img_data += outputs[outs][\"data\"][\"image/png\"]\n                    img_found = true\n                }\n            }\n            if (\"name\" in outputs[outs]) {\n                for (var text in outputs[outs][\"text\"]) {\n                    stdout += outputs[outs][\"text\"][text]\n                }\n                stdout_found = true\n                lines_stdout = outputs[outs][\"text\"].length\n            }\n            // Check for errors\n            if (\"ename\" in outputs[outs]) {\n                errors += outputs[outs]['ename'] + \"\\n\" + outputs[outs][\"evalue\"] + \"\\n\"\n                // for (var trace in outputs[outs][\"traceback\"]) {\n                //     errors += outputs[outs][\"traceback\"][trace]\n                // }\n                error_found = true\n                lines_error_trace = outputs[outs][\"traceback\"].length\n            }\n        }\n\n        var return_template = (\n            <div>\n                <div style={{\n                    padding: '5px 3px',\n                    display: stdout_found ? '' : 'none'\n                }}>\n                    <Tag color=\"#2db7f5\"\n                    >stdout</Tag><br></br>\n                    <AceEditor\n                        readOnly\n                        placeholder=\"--\"\n                        mode=\"markdown\"\n                        theme={this.state.text_ed_theme}\n                        name=\"stdout\"\n                        style={{\n                            maxWidth: '700px',\n                            padding: '10px',\n                            margin: '10px 0px'\n                        }}\n                        width=\"100%\"\n                        maxLines={lines_stdout + 1}\n                        fontSize={14}\n                        showPrintMargin={false}\n                        showGutter={false}\n                        highlightActiveLine={false}\n                        value={stdout}\n                        setOptions={{\n                            enableBasicAutocompletion: false,\n                            enableLiveAutocompletion: false,\n                            enableSnippets: false,\n                            showLineNumbers: false,\n                            tabSize: 2,\n                        }} /></div>\n                <div style={{ padding: '5px 3px', display: text_found ? '' : 'none' }}>\n                    <Tag color=\"#87d068\"\n                    >data:text/plain</Tag><br></br>\n                    <AceEditor\n                        readOnly\n                        placeholder=\"--\"\n                        mode=\"markdown\"\n                        theme={this.state.text_ed_theme}\n                        name=\"text\"\n                        style={{\n                            maxWidth: '700px',\n                            padding: '10px',\n                            margin: '10px 0px'\n                        }}\n                        width=\"100%\"\n                        maxLines={lines_text_plain}\n                        fontSize={14}\n                        showPrintMargin={false}\n                        showGutter={false}\n                        highlightActiveLine={false}\n                        value={text_plain}\n                        setOptions={{\n                            enableBasicAutocompletion: false,\n                            enableLiveAutocompletion: false,\n                            enableSnippets: false,\n                            showLineNumbers: false,\n                            tabSize: 2,\n                        }} /></div>\n                <div style={{ display: img_found ? '' : 'none' }}>\n                    <Tag color=\"#87d068\"\n                    >data:image/png</Tag><br></br>\n                    <img\n                        src={img_data}\n                        style={{\n                            display: img_found ? '' : 'none',\n                            width: '100%',\n                            backgroundColor: 'white'\n                        }} />\n                </div>\n                <div style={{ padding: '5px 3px', display: error_found ? '' : 'none' }}>\n                    <Tag color=\"#f50\"\n                    >error</Tag><br></br>\n                    <AceEditor\n                        readOnly\n                        placeholder=\"--\"\n                        mode=\"markdown\"\n                        theme={this.state.text_ed_theme}\n                        name=\"error\"\n                        style={{\n                            maxWidth: '700px',\n                            padding: '10px',\n                            margin: '10px 0px'\n                        }}\n                        width=\"100%\"\n                        maxLines={lines_error_trace}\n                        fontSize={14}\n                        showPrintMargin={false}\n                        showGutter={false}\n                        highlightActiveLine={false}\n                        value={errors}\n                        setOptions={{\n                            enableBasicAutocompletion: false,\n                            enableLiveAutocompletion: false,\n                            enableSnippets: false,\n                            showLineNumbers: false,\n                            tabSize: 2,\n                        }} /></div>\n            </div>\n        )\n\n\n        return return_template\n    }\n\n\n    themeChanger(ev) {\n        if (ev) {\n            this.setState({\n                // Editor Theme\n                ed_theme: 'darkTheme',\n                text_ed_theme: 'monokai',\n                //themes:\n                background_theme: \"black\",\n                background_text_theme: 'white',\n                // background_input_theme: '#2F3129',\n                background_input_theme: '#272822',\n                background_output_theme: '#2F3129',\n            })\n        }\n        else {\n            this.setState({\n                // Editor Theme\n                ed_theme: 'lightTheme',\n                text_ed_theme: 'kuroir',\n                //themes:\n                background_theme: \"white\",\n                background_text_theme: 'black',\n                // background_input_theme: '#2F3129',\n                background_input_theme: '#E8E9E8',\n                background_output_theme: '#F1F1F2',\n            })\n        }\n        console.log(`switch to ${ev}`);\n    }\n\n    gutterChanger(ev) {\n        if (ev) {\n            this.setState({\n                gutterVisible: true\n            })\n        }\n        else {\n            this.setState({\n                gutterVisible: false\n            })\n        }\n    }\n\n    render() {\n        console.log(this.props.file)\n        return (\n            <div>\n                <br></br>\n                <Spin spinning={this.state.loading} >\n                    <center>\n                        {/* This is where the blog metadata and the cover will go */}\n                        <div class={this.state.ed_theme}>\n                            <Card\n                                bodyStyle={{\n                                    padding: '30px 10px',\n                                    backgroundColor: this.state.background_output_theme,\n                                }}\n                                style={{\n                                    width: '100%',\n                                    maxWidth: '800px',\n                                    border: 'none'\n                                }}\n                            >\n                                <Row>\n                                    <Col span={1}></Col>\n                                    <Col span={22}>\n                                        <Typography.Title strong style={{\n                                            color: this.state.background_text_theme,\n                                            // fontSize: '50px',\n                                            wordWrap: 'break-word',\n                                            width: '100%',\n                                        }}>{this.props.title}</Typography.Title>\n                                        <Typography.Title\n                                            level={4} style={{\n                                                color: this.state.background_text_theme,\n                                                wordWrap: 'break-word',\n                                                width: '100%',\n                                                display: !!this.props.subtitle ? '' : 'none'\n                                            }}>{this.props.subtitle}</Typography.Title>\n                                    </Col>\n                                    <Col span={1}></Col>\n                                </Row>\n\n                                <Row>\n                                    <Col span={1}></Col>\n                                    <Col span={22}>\n                                        <img\n                                            alt=\"No Cover Image Found\"\n                                            style={{\n                                                display: !!this.props.coverImg ? '' : 'none',\n                                                width: '100%'\n                                            }}\n                                            src={!!this.props.coverImg ? this.props.coverImg : \"http://eskipaper.com/images/simple-silver-wallpaper-1.jpg\"} />\n                                    </Col>\n                                    <Col span={1}>\n\n                                    </Col>\n                                </Row>\n\n                                <br></br>\n                                <br></br>\n                                <Row>\n                                    <Col span={1}></Col>\n                                    <Col span={20}>\n                                        <Tag color=\"blue\" style={{ float: 'left' }}>{this.state.loading ? \"Unknown\" : this.state.notebook_json['metadata']['kernelspec']['display_name']}</Tag>\n                                        <Switch\n                                            style={{\n                                                margin: '0px 5px'\n                                            }}\n                                            defaultChecked checkedChildren=\"dark theme\" unCheckedChildren=\"light theme\"\n                                            onChange={this.themeChanger.bind(this)}\n                                        />\n                                        <Switch\n                                            style={{\n                                                margin: '0px 5px'\n                                            }}\n                                            checkedChildren=\"gutter visilbe\" unCheckedChildren=\"gutter hidden\"\n                                            onChange={this.gutterChanger.bind(this)} />\n                                    </Col>\n                                    <Col span={1}></Col>\n                                </Row>\n                            </Card>\n                        </div>\n                        {\n                            this.state.loading ? <div></div> : (this.state.notebook_json['cells'].map(item => (\n                                <Card\n                                    bodyStyle={{\n                                        padding: '0px 10px',\n                                        backgroundColor: this.state.background_output_theme\n                                    }}\n                                    style={{\n                                        width: '100%',\n                                        maxWidth: '800px',\n                                        border: 'none'\n                                    }}\n                                >\n\n                                    <Row\n                                        style={{\n                                            backgroundColor: this.state.background_output_theme\n                                        }}\n                                    >\n                                        <Col span={this.state.gutterVisible ? 3 : 1}>\n                                            <div\n                                                style={{\n                                                    display: this.state.gutterVisible ? '' : 'none'\n                                                }}\n                                            >\n                                                <Typography.Text\n                                                    style={{\n                                                        color: this.state.background_text_theme,\n                                                        float: 'left',\n                                                        padding: '5px',\n                                                        color: '#56ACBC',\n                                                        display: item['cell_type'] == \"code\" ? '' : 'none',\n                                                    }}>\n                                                    I [ {item['execution_count']} ]:\n                                            </Typography.Text>\n\n                                            </div>\n                                        </Col>\n\n                                        <Col span={this.state.gutterVisible ? 20 : 22}\n                                            style={{\n                                                textAlign: 'left'\n                                            }}\n                                        >\n\n                                            {item['cell_type'] == \"code\" ? (\n                                                <div\n                                                    style={{\n                                                        padding: '5px 0px',\n                                                        borderStyle: 'solid',\n                                                        borderWidth: '1px',\n                                                        backgroundColor: this.state.background_input_theme\n                                                    }}>\n                                                    <AceEditor\n                                                        readOnly\n                                                        placeholder=\"---\"\n                                                        mode=\"python\"\n                                                        theme={this.state.text_ed_theme}\n                                                        name=\"code\"\n                                                        style={{\n                                                            maxWidth: '700px',\n                                                            padding: '10px',\n                                                            margin: '10px 0px'\n                                                        }}\n                                                        width=\"100%\"\n                                                        maxLines={item['source'].length == 0 ? 1 : item['source'].length + 1}\n                                                        onLoad={this.onLoad}\n                                                        onChange={this.onChange}\n                                                        fontSize={14}\n                                                        showGutter={true}\n                                                        highlightActiveLine={true}\n                                                        value={this.praseSource(item['source'])}\n                                                        setOptions={{\n                                                            enableBasicAutocompletion: false,\n                                                            enableLiveAutocompletion: false,\n                                                            enableSnippets: false,\n                                                            showLineNumbers: true,\n                                                            tabSize: 2,\n                                                        }} />\n                                                </div>\n                                            ) :\n\n                                                <div class=\"MDImg\">\n                                                    <div\n                                                        class={this.state.ed_theme}\n                                                        style={{\n                                                            margin: '0px 0px',\n                                                            padding: '10px',\n                                                            // border:'solid',\n                                                            // borderWidth:'1px'\n                                                        }}\n                                                    >\n                                                        <ReactMarkdown\n                                                            style={{\n                                                                float: 'left'\n                                                            }}\n                                                            source={this.parseMD(item['source'])}\n                                                            escapeHtml={false}\n                                                        />\n                                                    </div>\n                                                </div>}\n                                        </Col>\n                                        <Col span={1}></Col>\n                                    </Row>\n\n                                    {\n                                        item['cell_type'] == 'markdown' ? <div></div> :\n                                            (\n                                                <Row\n                                                    style={{\n                                                        display: !!item['outputs'].length == 0 ? 'none' : 'visible',\n                                                        backgroundColor: this.state.background_output_theme\n                                                    }}>\n\n                                                    <Col span={this.state.gutterVisible ? 3 : 1}>\n                                                        <Typography.Text\n                                                            style={{\n                                                                display: this.state.gutterVisible ? '' : 'none',\n                                                                color: this.state.background_text_theme,\n                                                                float: 'left',\n                                                                padding: '5px',\n                                                                color: '#E5496A'\n                                                            }}>\n                                                            O [ {item['execution_count']} ]:\n                                                        </Typography.Text>\n                                                    </Col>\n                                                    <Col span={this.state.gutterVisible ? 20 : 22}\n                                                        style={{\n                                                            textAlign: 'left',\n                                                            color: 'white'\n                                                        }}>\n                                                        {this.praseOutputs(item['outputs'])}\n                                                    </Col>\n                                                    <Col span={1}></Col>\n                                                </Row>\n                                            )\n                                    }\n                                </Card>\n                            )))\n                        }\n                    </center>\n                </Spin>\n                <br></br>\n            </div>\n        )\n    }\n}\n\n\nexport default JupViewer;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport JupViewer from './JupViewer'\n\nconst ipynb = require('./BenchmarkNotebook.ipynb')\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <JupViewer\n          title=\"Jupyter as a Blog!\"\n          subtitle=\"I've always wanted to publish my jupyter notebooks as blogs. Finally I can.\"\n          // coverImg=\"https://notionpress.com/blog/wp-content/uploads/2018/06/Cover-design.png\"\n          // file={ipynb}\n          file=\"https://raw.githubusercontent.com/wdmdev/comsocsci2021-project/main/notebook.ipynb\"\n          // file=\"https://raw.githubusercontent.com/fastai/course-v3/master/nbs/dl1/00_notebook_tutorial.ipynb\"\n        />\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"antd/dist/antd.css\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}